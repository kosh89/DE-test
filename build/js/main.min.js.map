{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(() => {\n  const API_URL = 'https://echo.htmlacademy.ru';\n  const POST_METHOD = 'POST';\n  const HTTP_REQUEST_OK = 200;\n\n  const request = (url, method, data, onSuccess, onError) => {\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = 'json';\n\n    xhr.addEventListener('load', () => {\n      if (xhr.status === HTTP_REQUEST_OK) {\n        onSuccess(xhr.response);\n      } else {\n        onError('Response Status: ' + xhr.status + ' ' + xhr.statusText);\n      }\n    });\n\n    xhr.addEventListener('error', () => {\n      if (xhr.statusText !== HTTP_REQUEST_OK) {\n        onError('Connection failed');\n      }\n    });\n\n    xhr.open(method, url);\n    xhr.send(data);\n  };\n\n  window.backend = {\n    save: (data, onSuccess, onError) => {\n      request(API_URL, POST_METHOD, data, onSuccess, onError);\n    },\n\n    onServerRequestError: (errorMessage) => {\n      window.showSuccessMessage(errorMessage);\n    }\n  };\n})();\n(() => {\r\n  const ACTIVE_CLASS = 'active';\r\n\r\n  const headerBurgerElement = document.querySelector('.header__burger');\r\n  const burgerClassList = headerBurgerElement.classList;\r\n\r\n  const headerNavigationElement = document.querySelector('.header__navigation');\r\n  const headerNavigationClassList = headerNavigationElement.classList;\r\n\r\n  const navigationLinkElements = document.querySelectorAll('.navigation__link');\r\n\r\n  const onHeaderBurgerClick = () => {\r\n    if (burgerClassList.contains(ACTIVE_CLASS)) {\r\n      burgerClassList.remove(ACTIVE_CLASS);\r\n      headerNavigationClassList.remove(ACTIVE_CLASS);\r\n    } else {\r\n      burgerClassList.add(ACTIVE_CLASS);\r\n      headerNavigationClassList.add(ACTIVE_CLASS);\r\n    }\r\n  }\r\n\r\n  const onNavigationLinkClickHandler = () => {\r\n    burgerClassList.remove(ACTIVE_CLASS);\r\n    headerNavigationClassList.remove(ACTIVE_CLASS);\r\n  }\r\n\r\n  headerBurgerElement.addEventListener('click', onHeaderBurgerClick);\r\n  navigationLinkElements.forEach((link) => {\r\n    link.addEventListener('click', onNavigationLinkClickHandler);\r\n  })\r\n})();\n(() => {\r\n  const CLOSED_MODAL_CLASS = 'closed';\r\n  const OVERFLOW_HIDDEN_STYLE = 'hidden';\r\n  const OVERFLOW_VISIBLE_STYLE = 'visible';\r\n  const ESC_KEYCODE = 27;\r\n  const VALID_INPUT_COLOR = 'green';\r\n  const INVALID_INPUT_COLOR = 'red';\r\n\r\n  const body = document.querySelector('body');\r\n  const workButtonElement = body.querySelector('.work__button');\r\n\r\n  const modalElement = body.querySelector('.modal');\r\n  const modalWrapperElement = modalElement.querySelector('.modal__wrapper');\r\n  const modalContentElement = modalElement.querySelector('.modal__content');\r\n  const modalCloseButtonElement = modalElement.querySelector('.modal__close');\r\n  const modalDataSendingElement = body.querySelector('.modal__data-sending');\r\n  const modalStatusElement = modalDataSendingElement.querySelector('.modal__status');\r\n  const modalMessageElement = modalDataSendingElement.querySelector('.modal__message');\r\n\r\n  const formElement = body.querySelector('.form');\r\n  const formInputElements = formElement.querySelectorAll('.form__input');\r\n  const nameInputElement = formElement.querySelector('.form__input--name');\r\n  const emailInputElement = formElement.querySelector('.form__input--email');\r\n  const messageInputElement = formElement.querySelector('.form__input--message');\r\n\r\n  const emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  const onInputTypeHandler = function() {\r\n    if (this === emailInputElement) {\r\n      emailInputElement.style.borderColor = emailPattern.test(String(emailInputElement.value).toLowerCase()) ? VALID_INPUT_COLOR : INVALID_INPUT_COLOR;\r\n    } else {\r\n      this.style.borderColor = this.value ? VALID_INPUT_COLOR : INVALID_INPUT_COLOR;\r\n    }\r\n  };\r\n\r\n  const onWorkButtonClickHandler = (event) => {\r\n    event.preventDefault();\r\n    showModal();\r\n  };\r\n\r\n  const showModal = () => {\r\n    modalElement.classList.remove(CLOSED_MODAL_CLASS);\r\n    body.style.overflowY = OVERFLOW_HIDDEN_STYLE;\r\n    document.addEventListener('keydown', onModalEscPress);\r\n  }\r\n\r\n  const closeModal = () => {\r\n    formInputsClear(formInputElements);\r\n    modalElement.classList.add(CLOSED_MODAL_CLASS);\r\n    modalContentElement.classList.remove(CLOSED_MODAL_CLASS);\r\n    modalDataSendingElement.classList.add(CLOSED_MODAL_CLASS);\r\n    body.style.overflowY = OVERFLOW_VISIBLE_STYLE;\r\n    document.removeEventListener('keydown', onModalEscPress);\r\n  };\r\n\r\n  var onModalEscPress = (event) => {\r\n    if (event.keyCode === ESC_KEYCODE) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const onModalWrapperClickHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.classList.contains('modal__wrapper') && closeModal();\r\n  };\r\n\r\n  const formInputsClear = (formInputs) => {\r\n    formInputs.forEach((input) => {\r\n      input.value = '';\r\n      input.style.borderColor = '';\r\n    })\r\n  };\r\n\r\n  window.showSendingStatus = (error) => {\r\n    error ? (\r\n      modalStatusElement.textContent = 'Error!',\r\n      modalMessageElement.textContent = error\r\n    ) : (\r\n      modalStatusElement.textContent = 'Success!',\r\n      modalMessageElement.textContent = 'Your data has been sent.'\r\n    )\r\n\r\n    modalContentElement.classList.add(CLOSED_MODAL_CLASS);\r\n    modalDataSendingElement.classList.remove(CLOSED_MODAL_CLASS);\r\n\r\n    setTimeout(() => {\r\n      closeModal();\r\n    }, 2500);\r\n  }\r\n\r\n  const onFormSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (emailPattern.test(String(emailInputElement.value).toLowerCase()) &&\r\n        nameInputElement.value &&\r\n        messageInputElement.value) {\r\n          window.backend.save(new FormData(formElement), window.showSendingStatus, window.backend.onServerRequestError);\r\n    }\r\n  };\r\n\r\n  workButtonElement.addEventListener('click', onWorkButtonClickHandler);\r\n  modalWrapperElement.addEventListener('mouseup', onModalWrapperClickHandler);\r\n  modalCloseButtonElement.addEventListener('click', closeModal);\r\n  formElement.addEventListener('submit', onFormSubmitHandler);\r\n\r\n  formInputElements.forEach((input)=>{\r\n    input.addEventListener('input', onInputTypeHandler);\r\n  })\r\n})();"],"file":"main.min.js"}